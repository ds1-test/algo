#include <stdio.h>

#define MAX 50

int profit[MAX], weight[MAX], n, capacity;
float ratio[MAX], fraction[MAX];

void continuousKnapsack() {
    int i, j;
    float totalProfit = 0;
    int remaining = capacity;

    for (i = 0; i < n; i++) {
        ratio[i] = (float)profit[i] / weight[i];
    }

    for (i = 0; i < n - 1; i++) {
        for (j = i + 1; j < n; j++) {
            if (ratio[i] < ratio[j]) {
                float temp = ratio[i];
                ratio[i] = ratio[j];
                ratio[j] = temp;

                int tempP = profit[i];
                profit[i] = profit[j];
                profit[j] = tempP;

                int tempW = weight[i];
                weight[i] = weight[j];
                weight[j] = tempW;
            }
        }
    }

    for (i = 0; i < n; i++) {
        fraction[i] = 0.0;
    }

    for (i = 0; i < n; i++) {
        if (weight[i] <= remaining) {
            fraction[i] = 1.0;
            totalProfit += profit[i];
            remaining -= weight[i];
        } else {
            fraction[i] = (float)remaining / weight[i];
            totalProfit += fraction[i] * profit[i];
            break;
        }
    }

    printf("\n--- Continuous (Fractional) Knapsack ---\n");
    printf("Total Profit: %.2f\n", totalProfit);
    printf("Fractions of items included:\n");
    for (i = 0; i < n; i++) {
        printf("Item %d: %.2f\n", i + 1, fraction[i]);
    }
}

void discreteKnapsack() {
    int i;
    int totalProfit = 0;
    int remaining = capacity;

    for (i = 0; i < n; i++) {
        fraction[i] = 0.0;
    }

    for (i = 0; i < n; i++) {
        if (weight[i] <= remaining) {
            fraction[i] = 1.0;
            totalProfit += profit[i];
            remaining -= weight[i];
        }
    }

    printf("\n--- Discrete (0/1) Knapsack ---\n");
    printf("Total Profit: %d\n", totalProfit);
    printf("Items included (1: included, 0: not included):\n");
    for (i = 0; i < n; i++) {
        printf("Item %d: %.0f\n", i + 1, fraction[i]);
    }
}

int main() {
    int i;

    printf("Enter number of items: ");
    scanf("%d", &n);

    printf("Enter weights:\n");
    for (i = 0; i < n; i++)
        scanf("%d", &weight[i]);

    printf("Enter profits:\n");
    for (i = 0; i < n; i++)
        scanf("%d", &profit[i]);

    printf("Enter knapsack capacity: ");
    scanf("%d", &capacity);

    continuousKnapsack();
    discreteKnapsack();

    return 0;
}

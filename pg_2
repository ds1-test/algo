#include<stdio.h>
#define MAX 10
#define INF 999
int cost[MAX][MAX],n;
void prim(){
int selected[MAX]={0};
int minCost=0;
int edgeCount=0;
selected[0]=1;
printf("Edges for the Minimum Spanning tree:\n");
while(edgeCount<n-1){
int min=INF;
int u=-1,v=-1;
for(int i=0;i<n;i++){
if(selected[i]){
for(int j=0;j<n;j++){
if(!selected[j]&&cost[i][j]<min){
min=cost[i][j];
u=i;
v=j;
}
}
}
}
if(u!=-1,v!=-1){
printf("Edges %d:(%d-%d) cost = %d\n",edgeCount+1,u,v,min);
selected[v]=1;
minCost+=min;
edgeCount++;
}
cost[u][v]=cost[v][u]=INF;
}
printf("Total cost of the minimum spanning tree :%d\n",minCost);
}
int main(){
printf("Enter the number of verices:");
scanf("%d",&n);
printf("Enter the cost adjacency matricx(use %d for INF):\n",INF);
for(int i=0;i<n;i++){
for(int j=0;j<n;j++){
scanf("%d",&cost[i][j]);
}
}
prim();
return 0;
}
